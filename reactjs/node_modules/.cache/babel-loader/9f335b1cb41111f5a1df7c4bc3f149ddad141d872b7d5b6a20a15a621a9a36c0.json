{"ast":null,"code":"var _jsxFileName = \"/home/rb144/Documents/projectItern/reactjs/src/router/web.jsx\";\nimport { BrowserRouter as Routes, Route } from 'react-router-dom';\nimport Signin from '../components/account/signin';\nimport Signup from '../components/account/signup';\nimport ForgetPass from '../components/account/forgetpass';\nimport HomeGuest from '../page/homeGuest';\nimport HomeUsers from '../page/homeUser';\nimport AdminUsers from '../page/adminUsers';\nimport AdminVideo from '../page/adminVideo';\n\n// import { useEffect, useState } from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//   const [authenticated, setAuthenticated] = useState(false);\n\n//   useEffect(() => {\n//     // Kiểm tra xem token đã tồn tại và hợp lệ hay không\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       // Thực hiện kiểm tra token với server (nếu cần)\n//       // Nếu token hợp lệ, cho phép truy cập\n//       setAuthenticated(true);\n//     } else {\n//       // Nếu không có token, chuyển hướng đến trang đăng nhập\n//       setAuthenticated(false);\n//     }\n//   }, []);\n\n//   if (!authenticated) {\n//     return <Navigate to=\"/signin\" />;\n//   }\n\n//   return <Route {...rest} element={element} />;\n// };\n\n// Sử dụng PrivateRoute trong AppRouter\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signin\",\n      element: /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/repass\",\n      element: /*#__PURE__*/_jsxDEV(ForgetPass, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(HomeGuest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/user\",\n      element: /*#__PURE__*/_jsxDEV(HomeUsers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/user\",\n      element: /*#__PURE__*/_jsxDEV(AdminUsers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/video\",\n      element: /*#__PURE__*/_jsxDEV(AdminVideo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Signin","Signup","ForgetPass","HomeGuest","HomeUsers","AdminUsers","AdminVideo","jsxDEV","_jsxDEV","AppRouter","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rb144/Documents/projectItern/reactjs/src/router/web.jsx"],"sourcesContent":["import { BrowserRouter as Routes, Route } from 'react-router-dom';\nimport Signin from '../components/account/signin';\nimport Signup from '../components/account/signup';\nimport ForgetPass from '../components/account/forgetpass';\nimport HomeGuest from '../page/homeGuest';\nimport HomeUsers from '../page/homeUser';\nimport AdminUsers from '../page/adminUsers';\nimport AdminVideo from '../page/adminVideo';\n\n// import { useEffect, useState } from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//   const [authenticated, setAuthenticated] = useState(false);\n\n//   useEffect(() => {\n//     // Kiểm tra xem token đã tồn tại và hợp lệ hay không\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       // Thực hiện kiểm tra token với server (nếu cần)\n//       // Nếu token hợp lệ, cho phép truy cập\n//       setAuthenticated(true);\n//     } else {\n//       // Nếu không có token, chuyển hướng đến trang đăng nhập\n//       setAuthenticated(false);\n//     }\n//   }, []);\n\n//   if (!authenticated) {\n//     return <Navigate to=\"/signin\" />;\n//   }\n\n//   return <Route {...rest} element={element} />;\n// };\n\n// Sử dụng PrivateRoute trong AppRouter\nconst AppRouter = () => {\n  return (\n      <Routes>\n        <Route path=\"/signin\" element={<Signin />} />\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path=\"/repass\" element={<ForgetPass />} />\n        <Route path=\"/\" element={<HomeGuest />} />\n        <Route path=\"/user\" element={<HomeUsers />} />\n        <Route path=\"/admin/user\" element={<AdminUsers />} />\n        <Route path=\"/admin/video\" element={<AdminVideo />} />\n      </Routes>\n  );\n};\n\nexport default AppRouter;\n"],"mappings":";AAAA,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACjE,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACID,OAAA,CAACV,MAAM;IAAAY,QAAA,gBACLF,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,SAAS;MAACC,OAAO,eAAEJ,OAAA,CAACR,MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CR,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,SAAS;MAACC,OAAO,eAAEJ,OAAA,CAACP,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CR,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,SAAS;MAACC,OAAO,eAAEJ,OAAA,CAACN,UAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDR,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEJ,OAAA,CAACL,SAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CR,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,OAAO;MAACC,OAAO,eAAEJ,OAAA,CAACJ,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CR,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,aAAa;MAACC,OAAO,eAAEJ,OAAA,CAACH,UAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDR,OAAA,CAACT,KAAK;MAACY,IAAI,EAAC,cAAc;MAACC,OAAO,eAAEJ,OAAA,CAACF,UAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEf,CAAC;AAACC,EAAA,GAZIR,SAAS;AAcf,eAAeA,SAAS;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}