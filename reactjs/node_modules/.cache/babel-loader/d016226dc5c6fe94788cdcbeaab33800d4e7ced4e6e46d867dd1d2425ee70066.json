{"ast":null,"code":"var _jsxFileName = \"/home/rb144/Documents/projectItern/reactjs/src/components/content/managerVideo.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport '../css/content.css';\nimport { useEffect, useState } from 'react';\nimport { formatViews, timeAgo } from '../function/content';\nimport { delVideo } from '../function/api';\nimport { Btn } from './button';\nimport { EditVideo } from '../form/editVideo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Playlist = () => {\n  _s();\n  const [playList, setPlayList] = useState([]);\n  const [isVisible, setIsVisible] = useState(false); // State để điều khiển hiển thị EditVideo\n  const [idVideo, setIdVideo] = useState(0);\n  const [refreshKey, setRefreshKey] = useState(0); // State để cập nhật danh sách playList\n\n  const editbtn = id => {\n    setIdVideo(id);\n    setIsVisible(!isVisible);\n  };\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const options = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        let response = await axios.get('http://localhost:3002/playlist/', options);\n        const sortedPlaylist = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setPlayList(sortedPlaylist);\n      } catch (error) {\n        console.error('Error fetching playlist:', error);\n      }\n    };\n    fetchPlaylist();\n  }, [refreshKey]); // Thêm refreshKey vào dependency array để cập nhật khi refreshKey thay đổi\n\n  const renderVideo = (list, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: list.src,\n      title: \"YouTube video player\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:3000/images/${list.avtUser}`,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"des\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: list.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"late\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watched\",\n            children: [formatViews(list.watched), \" l\\u01B0\\u1EE3t xem\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [\"\\u2022 \", timeAgo(list.date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change\",\n        onClick: () => editbtn(list.id),\n        children: \"S\\u1EEDa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete\",\n        onClick: () => handleDelete(list.id),\n        children: \"X\\xF3a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n  const handleDelete = async id => {\n    try {\n      await delVideo(id);\n      // Sau khi xóa thành công, cập nhật lại danh sách playList bằng cách tăng refreshKey\n      setRefreshKey(prevKey => prevKey + 1);\n    } catch (error) {\n      console.error('Error deleting video:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Btn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video\",\n      children: playList.map((list, index) => renderVideo(list, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `edit-video ${isVisible ? 'visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"overlay\",\n        onClick: () => editbtn(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditVideo, {\n        idVideo: idVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"PSz1MimkGnGslI5USh66Mih9xr0=\");\n_c = Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["axios","useEffect","useState","formatViews","timeAgo","delVideo","Btn","EditVideo","jsxDEV","_jsxDEV","Playlist","_s","playList","setPlayList","isVisible","setIsVisible","idVideo","setIdVideo","refreshKey","setRefreshKey","editbtn","id","fetchPlaylist","token","localStorage","getItem","options","headers","Authorization","response","get","sortedPlaylist","data","sort","a","b","Date","date","error","console","renderVideo","list","index","className","children","src","title","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","avtUser","alt","name","author","watched","onClick","handleDelete","prevKey","map","_c","$RefreshReg$"],"sources":["/home/rb144/Documents/projectItern/reactjs/src/components/content/managerVideo.jsx"],"sourcesContent":["import axios from 'axios';\nimport '../css/content.css';\nimport { useEffect, useState } from 'react';\nimport { formatViews, timeAgo } from '../function/content';\nimport { delVideo } from '../function/api';\nimport { Btn } from './button';\nimport { EditVideo } from '../form/editVideo';\n\nexport const Playlist = () => {\n  const [playList, setPlayList] = useState([]);\n  const [isVisible, setIsVisible] = useState(false); // State để điều khiển hiển thị EditVideo\n  const [idVideo, setIdVideo] = useState(0);\n  const [refreshKey, setRefreshKey] = useState(0); // State để cập nhật danh sách playList\n\n  const editbtn = (id) => {\n    setIdVideo(id);\n    setIsVisible(!isVisible);\n  };\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const token = localStorage.getItem('token');\n\n        const options = {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        };\n\n        let response = await axios.get('http://localhost:3002/playlist/', options);\n\n        const sortedPlaylist = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setPlayList(sortedPlaylist);\n      } catch (error) {\n        console.error('Error fetching playlist:', error);\n      }\n    };\n\n    fetchPlaylist();\n  }, [refreshKey]); // Thêm refreshKey vào dependency array để cập nhật khi refreshKey thay đổi\n\n  const renderVideo = (list, index) => (\n    <div key={index} className=\"video-wrapper\">\n      <iframe\n        src={list.src}\n        title=\"YouTube video player\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n      <div className=\"description\">\n        <img src={`http://localhost:3000/images/${list.avtUser}`} alt=\"Avatar\" />\n        <div className=\"des\">\n          <div className=\"name\">{list.name}</div>\n          <div className=\"author\">{list.author}</div>\n          <div className=\"late\">\n            <div className=\"watched\">{formatViews(list.watched)} lượt xem</div>\n            <div className=\"date\">• {timeAgo(list.date)}</div>\n          </div>\n        </div>\n        <div className=\"change\" onClick={() => editbtn(list.id)}>Sửa</div>\n        <div className=\"delete\" onClick={() => handleDelete(list.id)}>Xóa</div>\n      </div>\n    </div>\n  );\n\n  const handleDelete = async (id) => {\n    try {\n      await delVideo(id);\n      // Sau khi xóa thành công, cập nhật lại danh sách playList bằng cách tăng refreshKey\n      setRefreshKey((prevKey) => prevKey + 1);\n    } catch (error) {\n      console.error('Error deleting video:', error);\n    }\n  };\n\n  return (\n    <div className=\"content\">\n      <Btn />\n      <div className=\"video\">\n        {playList.map((list, index) => renderVideo(list, index))}\n      </div>\n      <div className={`edit-video ${isVisible ? 'visible' : ''}`}>\n        <div id=\"overlay\" onClick={() => editbtn(0)}></div>\n        <EditVideo idVideo={idVideo}/>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,OAAO,QAAQ,qBAAqB;AAC1D,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,GAAG,QAAQ,UAAU;AAC9B,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjD,MAAMkB,OAAO,GAAIC,EAAE,IAAK;IACtBJ,UAAU,CAACI,EAAE,CAAC;IACdN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMqB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3C,MAAMC,OAAO,GAAG;UACdC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUL,KAAK;UAChC;QACF,CAAC;QAED,IAAIM,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,iCAAiC,EAAEJ,OAAO,CAAC;QAE1E,MAAMK,cAAc,GAAGF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,CAAC;QACxFxB,WAAW,CAACkB,cAAc,CAAC;MAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDhB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,MAAMsB,WAAW,GAAGA,CAACC,IAAI,EAAEC,KAAK,kBAC9BjC,OAAA;IAAiBkC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBACxCnC,OAAA;MACEoC,GAAG,EAAEJ,IAAI,CAACI,GAAI;MACdC,KAAK,EAAC,sBAAsB;MAC5BC,KAAK,EAAC,0FAA0F;MAChGC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACV3C,OAAA;MAAKkC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BnC,OAAA;QAAKoC,GAAG,EAAE,gCAAgCJ,IAAI,CAACY,OAAO,EAAG;QAACC,GAAG,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzE3C,OAAA;QAAKkC,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAClBnC,OAAA;UAAKkC,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEH,IAAI,CAACc;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvC3C,OAAA;UAAKkC,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAEH,IAAI,CAACe;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3C3C,OAAA;UAAKkC,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBnC,OAAA;YAAKkC,SAAS,EAAC,SAAS;YAAAC,QAAA,GAAEzC,WAAW,CAACsC,IAAI,CAACgB,OAAO,CAAC,EAAC,qBAAS;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnE3C,OAAA;YAAKkC,SAAS,EAAC,MAAM;YAAAC,QAAA,GAAC,SAAE,EAACxC,OAAO,CAACqC,IAAI,CAACJ,IAAI,CAAC;UAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN3C,OAAA;QAAKkC,SAAS,EAAC,QAAQ;QAACe,OAAO,EAAEA,CAAA,KAAMtC,OAAO,CAACqB,IAAI,CAACpB,EAAE,CAAE;QAAAuB,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClE3C,OAAA;QAAKkC,SAAS,EAAC,QAAQ;QAACe,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAAClB,IAAI,CAACpB,EAAE,CAAE;QAAAuB,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA,GAnBEV,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAoBV,CACN;EAED,MAAMO,YAAY,GAAG,MAAOtC,EAAE,IAAK;IACjC,IAAI;MACF,MAAMhB,QAAQ,CAACgB,EAAE,CAAC;MAClB;MACAF,aAAa,CAAEyC,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE7B,OAAA;IAAKkC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBnC,OAAA,CAACH,GAAG;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACP3C,OAAA;MAAKkC,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBhC,QAAQ,CAACiD,GAAG,CAAC,CAACpB,IAAI,EAAEC,KAAK,KAAKF,WAAW,CAACC,IAAI,EAAEC,KAAK,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACN3C,OAAA;MAAKkC,SAAS,EAAE,cAAc7B,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;MAAA8B,QAAA,gBACzDnC,OAAA;QAAKY,EAAE,EAAC,SAAS;QAACqC,OAAO,EAAEA,CAAA,KAAMtC,OAAO,CAAC,CAAC;MAAE;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnD3C,OAAA,CAACF,SAAS;QAACS,OAAO,EAAEA;MAAQ;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzC,EAAA,CAhFWD,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}