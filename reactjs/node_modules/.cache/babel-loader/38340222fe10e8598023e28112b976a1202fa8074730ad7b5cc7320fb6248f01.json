{"ast":null,"code":"export const formatViews = watched => {\n  if (watched >= 1000000000) {\n    return (watched / 1000000000).toFixed(1) + ' T'; // Convert to billions\n  } else if (watched >= 1000000) {\n    return (watched / 1000000).toFixed(1) + ' Tr'; // Convert to millions\n  } else if (watched >= 1000) {\n    return (watched / 1000).toFixed(1) + ' N'; // Convert to thousands\n  } else {\n    return watched.toString();\n  }\n};\nexport const timeAgo = date => {\n  const currentDate = new Date();\n  const inputDate = new Date(date);\n  const diffMilliseconds = currentDate - inputDate;\n  const diffSeconds = Math.floor(diffMilliseconds / 1000);\n  const diffMinutes = Math.floor(diffSeconds / 60);\n  const diffHours = Math.floor(diffMinutes / 60);\n  const diffDays = Math.floor(diffHours / 24);\n  const diffWeeks = Math.floor(diffDays / 7);\n  const diffMonths = currentDate.getMonth() - inputDate.getMonth() + 12 * (currentDate.getFullYear() - inputDate.getFullYear());\n  const diffYears = currentDate.getFullYear() - inputDate.getFullYear();\n  if (diffYears > 0) {\n    const remainingSeconds = diffSeconds % 60;\n    return `${diffYears} năm trước `;\n  }\n  if (diffMonths > 0) {\n    const remainingWeeks = diffWeeks % 4;\n    const remainingDays = diffDays % 7;\n    const remainingHours = diffHours % 24;\n    const remainingMinutes = diffMinutes % 60;\n    const remainingSeconds = diffSeconds % 60;\n    return `${diffMonths} tháng trước`;\n  }\n  if (diffWeeks > 0) {\n    const remainingDays = diffDays % 7;\n    const remainingHours = diffHours % 24;\n    const remainingMinutes = diffMinutes % 60;\n    const remainingSeconds = diffSeconds % 60;\n    return `${diffWeeks} tuần trước`;\n  }\n  if (diffDays > 0) {\n    const remainingHours = diffHours % 24;\n    const remainingMinutes = diffMinutes % 60;\n    const remainingSeconds = diffSeconds % 60;\n    return `${diffDays} ngày ${remainingHours} giờ ${remainingMinutes} phút ${remainingSeconds} giây trước`;\n  }\n  if (diffHours > 0) {\n    const remainingMinutes = diffMinutes % 60;\n    const remainingSeconds = diffSeconds % 60;\n    return `${diffHours} giờ ${remainingMinutes} phút ${remainingSeconds} giây trước`;\n  }\n  if (diffMinutes > 0) {\n    const remainingSeconds = diffSeconds % 60;\n    return `${diffMinutes} phút ${remainingSeconds} giây trước`;\n  }\n  {\n    return `${diffSeconds} giây trước`;\n  }\n};\nexport const changeNameVideoBtn = date => {};\nexport const delVideo = date => {};","map":{"version":3,"names":["formatViews","watched","toFixed","toString","timeAgo","date","currentDate","Date","inputDate","diffMilliseconds","diffSeconds","Math","floor","diffMinutes","diffHours","diffDays","diffWeeks","diffMonths","getMonth","getFullYear","diffYears","remainingSeconds","remainingWeeks","remainingDays","remainingHours","remainingMinutes","changeNameVideoBtn","delVideo"],"sources":["/home/rb144/Documents/project-typescript-reactjs/my-youtube-app/src/components/function/content.jsx"],"sourcesContent":["export const formatViews = (watched) => {\n    if (watched >= 1000000000) {\n      return (watched / 1000000000).toFixed(1) + ' T'; // Convert to billions\n    } else if (watched >= 1000000) {\n      return (watched / 1000000).toFixed(1) + ' Tr'; // Convert to millions\n    } else if (watched >= 1000) {\n      return (watched / 1000).toFixed(1) + ' N'; // Convert to thousands\n    } else {\n      return watched.toString();\n    }\n};\n  \nexport const timeAgo = (date) => {\n    const currentDate = new Date();\n    const inputDate = new Date(date);\n  \n    const diffMilliseconds = currentDate - inputDate;\n    const diffSeconds = Math.floor(diffMilliseconds / 1000);\n    const diffMinutes = Math.floor(diffSeconds / 60);\n    const diffHours = Math.floor(diffMinutes / 60);\n    const diffDays = Math.floor(diffHours / 24);\n    const diffWeeks = Math.floor(diffDays / 7);\n    const diffMonths = currentDate.getMonth() - inputDate.getMonth() + (12 * (currentDate.getFullYear() - inputDate.getFullYear()));\n    const diffYears = currentDate.getFullYear() - inputDate.getFullYear();\n  \n    if (diffYears > 0) {\n\n      \n      const remainingSeconds = diffSeconds % 60;\n      return `${diffYears} năm trước `;\n    }\n    if (diffMonths > 0) {\n      const remainingWeeks = diffWeeks % 4;\n      const remainingDays = diffDays % 7;\n      const remainingHours = diffHours % 24;\n      const remainingMinutes = diffMinutes % 60;\n      const remainingSeconds = diffSeconds % 60;\n      return `${diffMonths} tháng trước`;\n    } \n    if (diffWeeks > 0) {\n      const remainingDays = diffDays % 7;\n      const remainingHours = diffHours % 24;\n      const remainingMinutes = diffMinutes % 60;\n      const remainingSeconds = diffSeconds % 60;\n      return `${diffWeeks} tuần trước`;\n    } \n    if (diffDays > 0) {\n      const remainingHours = diffHours % 24;\n      const remainingMinutes = diffMinutes % 60;\n      const remainingSeconds = diffSeconds % 60;\n      return `${diffDays} ngày ${remainingHours} giờ ${remainingMinutes} phút ${remainingSeconds} giây trước`;\n    } \n    if (diffHours > 0) {\n      const remainingMinutes = diffMinutes % 60;\n      const remainingSeconds = diffSeconds % 60;\n      return `${diffHours} giờ ${remainingMinutes} phút ${remainingSeconds} giây trước`;\n    } \n    if (diffMinutes > 0) {\n      const remainingSeconds = diffSeconds % 60;\n      return `${diffMinutes} phút ${remainingSeconds} giây trước`;\n    } \n    {\n      return `${diffSeconds} giây trước`;\n    }\n};\n\nexport const changeNameVideoBtn = (date) => {}\n\nexport const delVideo = (date) => {}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}