{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:3001/playlist'; // Thay thế bằng URL API thực tế của bạn\n\nexport const addVideo = (src, name) => {\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n  let hour = String(today.getHours()).padStart(2, '0');\n  let minute = String(today.getMinutes()).padStart(2, '0');\n  let second = String(today.getSeconds()).padStart(2, '0');\n  today = `${mm}/${dd}/${yyyy} ${hour}:${minute}:${second}`;\n  const newVideo = {\n    avtUser: 'penguin.png',\n    src: src,\n    name: name,\n    author: 'phuoctt',\n    watched: '0',\n    date: today\n  };\n  return axios.post(`${baseURL}`, newVideo, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    console.log('Video added successfully:', response.data);\n    return response.data; // Trả về dữ liệu từ server nếu cần thiết\n  }).catch(error => {\n    console.error('Error adding video:', error);\n    throw error; // Ném lỗi để component gọi hàm này có thể xử lý\n  });\n};\nexport const logout = username => {\n  const data = {\n    username: username\n  };\n  return axios.post('/logout', data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (response.status === 200) {\n      const responseData = response.data;\n      if (responseData.message === 'Success') {\n        window.location.replace(\"/login\");\n      }\n    } else {\n      // Handle other statuses if needed\n    }\n  }).catch(error => {\n    console.error('Error logging out:', error);\n    throw error; // Ném lỗi để component gọi hàm này có thể xử lý\n  });\n};","map":{"version":3,"names":["axios","baseURL","addVideo","src","name","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","newVideo","avtUser","author","watched","date","post","headers","then","response","console","log","data","catch","error","logout","username","status","responseData","message","window","location","replace"],"sources":["/home/rb144/Documents/project-typescript-reactjs/my-youtube-app/src/components/function/api.jsx"],"sourcesContent":["import axios from 'axios';\nconst baseURL = 'http://localhost:3001/playlist'; // Thay thế bằng URL API thực tế của bạn\n\nexport const addVideo = (src, name) => {\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n    let hour = String(today.getHours()).padStart(2, '0');\n    let minute = String(today.getMinutes()).padStart(2, '0');\n    let second = String(today.getSeconds()).padStart(2, '0');\n    today = `${mm}/${dd}/${yyyy} ${hour}:${minute}:${second}`;\n\n    const newVideo = {\n        avtUser: 'penguin.png',\n        src: src,\n        name: name,\n        author: 'phuoctt',\n        watched: '0',\n        date: today\n    };\n\n    return axios.post(`${baseURL}`, newVideo, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(response => {\n        console.log('Video added successfully:', response.data);\n        return response.data; // Trả về dữ liệu từ server nếu cần thiết\n    })\n    .catch(error => {\n        console.error('Error adding video:', error);\n        throw error; // Ném lỗi để component gọi hàm này có thể xử lý\n    });\n};\n  \nexport const logout = (username) => {\n    const data = {\n        username: username\n    };\n\n    return axios.post('/logout', data, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(response => {\n        if (response.status === 200) {\n            const responseData = response.data;\n            if (responseData.message === 'Success') {\n                window.location.replace(\"/login\");\n            }\n        } else {\n            // Handle other statuses if needed\n        }\n    })\n    .catch(error => {\n        console.error('Error logging out:', error);\n        throw error; // Ném lỗi để component gọi hàm này có thể xử lý\n    });\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAElD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EACnC,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,IAAIC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjD,IAAIC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAIG,IAAI,GAAGR,KAAK,CAACS,WAAW,CAAC,CAAC;EAC9B,IAAIC,IAAI,GAAGP,MAAM,CAACH,KAAK,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,IAAIO,MAAM,GAAGT,MAAM,CAACH,KAAK,CAACa,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACxD,IAAIS,MAAM,GAAGX,MAAM,CAACH,KAAK,CAACe,UAAU,CAAC,CAAC,CAAC,CAACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACxDL,KAAK,GAAG,GAAGM,EAAE,IAAIJ,EAAE,IAAIM,IAAI,IAAIE,IAAI,IAAIE,MAAM,IAAIE,MAAM,EAAE;EAEzD,MAAME,QAAQ,GAAG;IACbC,OAAO,EAAE,aAAa;IACtBnB,GAAG,EAAEA,GAAG;IACRC,IAAI,EAAEA,IAAI;IACVmB,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE,GAAG;IACZC,IAAI,EAAEpB;EACV,CAAC;EAED,OAAOL,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,EAAE,EAAEoB,QAAQ,EAAE;IACtCM,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;IACdC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACvD,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK,CAAC,CAAC;EACjB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK;EAChC,MAAMJ,IAAI,GAAG;IACTI,QAAQ,EAAEA;EACd,CAAC;EAED,OAAOpC,KAAK,CAAC0B,IAAI,CAAC,SAAS,EAAEM,IAAI,EAAE;IAC/BL,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACzB,MAAMC,YAAY,GAAGT,QAAQ,CAACG,IAAI;MAClC,IAAIM,YAAY,CAACC,OAAO,KAAK,SAAS,EAAE;QACpCC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;MACrC;IACJ,CAAC,MAAM;MACH;IAAA;EAER,CAAC,CAAC,CACDT,KAAK,CAACC,KAAK,IAAI;IACZJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAC;EACjB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}