{"ast":null,"code":"var _jsxFileName = \"/home/rb144/Documents/projectItern/reactjs/src/components/content/views.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const Views = () => {\n  _s();\n  const [playlistData, setPlaylistData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    // Fetch playlist data from the API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/playlist/');\n        const data = await response.json();\n        console.log('API Data:', data); // Log data to check its structure\n        if (Array.isArray(data)) {\n          setPlaylistData(data);\n          prepareChartData(data);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching playlist data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const prepareChartData = data => {\n    if (Array.isArray(data) && data.length > 0) {\n      // Tiếp tục xử lý dữ liệu ở đây\n      const labels = data.map(item => item.name || 'Unknown');\n      const watchedCounts = data.map(item => item.watched || 0);\n      setChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Lượt xem',\n          data: watchedCounts,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      });\n    } else {\n      console.error('Dữ liệu không hợp lệ hoặc mảng rỗng.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Th\\u1ED1ng k\\xEA l\\u01B0\\u1EE3t xem playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return context.dataset.label + ': ' + context.raw;\n                }\n              }\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Tên Playlist'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Lượt xem'\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Views, \"YJc0FZxOatchsNt1jFM1pKAfxEM=\");\n_c = Views;\nexport default Views;\nvar _c;\n$RefreshReg$(_c, \"Views\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Views","_s","playlistData","setPlaylistData","chartData","setChartData","fetchData","response","fetch","data","json","console","log","Array","isArray","prepareChartData","error","length","labels","map","item","name","watchedCounts","watched","datasets","label","backgroundColor","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","y","beginAtZero","_c","$RefreshReg$"],"sources":["/home/rb144/Documents/projectItern/reactjs/src/components/content/views.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport const Views = () => {\n  const [playlistData, setPlaylistData] = useState([]);\n  const [chartData, setChartData] = useState({});\n\n  useEffect(() => {\n    // Fetch playlist data from the API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/playlist/');\n        const data = await response.json();\n        console.log('API Data:', data); // Log data to check its structure\n        if (Array.isArray(data)) {\n          setPlaylistData(data);\n          prepareChartData(data);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching playlist data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const prepareChartData = (data) => {\n    if (Array.isArray(data) && data.length > 0) {\n      // Tiếp tục xử lý dữ liệu ở đây\n      const labels = data.map(item => item.name || 'Unknown');\n      const watchedCounts = data.map(item => item.watched || 0);\n  \n      setChartData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Lượt xem',\n            data: watchedCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          }\n        ],\n      });\n    } else {\n      console.error('Dữ liệu không hợp lệ hoặc mảng rỗng.');\n    }\n  };\n  \n\n  return (\n    <div>\n      <h2>Thống kê lượt xem playlist</h2>\n      <div style={{ width: '80%', margin: 'auto' }}>\n        <Bar\n          data={chartData}\n          options={{\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top',\n              },\n              tooltip: {\n                callbacks: {\n                  label: function (context) {\n                    return context.dataset.label + ': ' + context.raw;\n                  }\n                }\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Tên Playlist'\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Lượt xem'\n                },\n                beginAtZero: true\n              }\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Views;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}